services:
  loki:
    image: grafana/loki:3.0.0
    container_name: loki
      #  networks:
      # my-overlay-network:
      #  aliases:
      #   - loki
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    volumes:
      - ./data/loki/loki-local-config.yaml:/etc/loki/loki-local-config.yaml
  promtail:
    image: grafana/promtail:latest
    container_name: promtail
    volumes:
      - ./data/promtail/promtail.yaml:/etc/promtail/promtail.yaml
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock
    command: -config.file=/etc/promtail/promtail.yaml
  grafana:
    container_name: grafana
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
        #    networks#:
        #      my-overlay-network:
        #  aliases:
        # - grafana
    environment:
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
  db:
    image: zoranashura402/database
    container_name: db
      #   volumes:
      # - postgres_data:/var/lib/postgresql/data
      #    networks:
      # - my-overlay-network
  session_service:
    container_name: session-service
    image: session
    labels:
      logging: "promtail"
      logging_jobname: "containerlogs"
    ports:
      - "8081:8081"
        #    networks:
        # my-overlay-network:
        # aliases:
        #  - session-service
    environment:
      POSTGRES_HOST: db
      POSTGRES_PORT: 5432
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: users_db
    command: java -jar /app/app.jar;
    depends_on:
      - db
        #networks:
  # my-overlay-network:
    #    driver: overlay
      #    attachable: true
